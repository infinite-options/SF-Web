#!/bin/bash

# Bash script to warn users about unused dependencies

if [[ "$#" > 2 ]]; then
	echo "Error: bundle-compressor takes two command-line arguments. Try ./bundle-compressor --help. Exiting..."
	exit 0
fi

function help () {
	echo "Checks project to find node packages that are not in use by the program."
	echo "Flags:"
	echo "'-d' or '--delete' : Turn on deletion mode. Will delete any package not in use by the program by default. If a second command-line argument follows one of these flags, then that package will be the only one deleted (given that it is not in use)."
	echo "'-v' or '--verbose' : Turn on verbose mode. If a package is in use, the location of use will be echoed to the command line"
}

if [["$1" == "--help" or "$1" == "-h" or "$1" == "--man" or "$1" == "-m"]]
	help
fi

function prune () {
	
}
PARSING_DEPS="FALSE"
CURR_KEY="None"
CURR_LINE=0

while read line
do
	REGEX_DEP_START='^\s*\"(.+)\":\s*'
	REGEX_DEP_END='^\s*\}'
	CURR_LINE=$(( $CURR_LINE + 1 ))

	if [[ $line =~ $REGEX_DEP_START ]]; then
		CURR_KEY=${BASH_REMATCH[1]}
	fi
	
	if [[ "$PARSING_DEPS" == "TRUE" && $line =~ $REGEX_DEP_END ]]; then
		PARSING_DEPS="FALSE"
		echo "All dependencies have been searched."
	elif [[ "$CURR_KEY" == "dependencies" ]]; then
		PARSING_DEPS="TRUE"
	elif [[ "$PARSING_DEPS" == "TRUE" ]]; then	
		ret="$(grep -nr "$CURR_KEY" ./src)"
		
		if [[ "$1" == "-v" || "$1" == "--verbose" ]]; then

			if [[ "$#" == "1" ]] || [[ "$CURR_KEY" == "$2" ]]; then
				echo "=============== Start of $CURR_KEY Check ================"
				echo "$ret"
				echo "=============== End of $CURR_KEY Check ================"

			fi
		fi
	
		if [[ "$ret" == "" ]]; then
			echo "$CURR_KEY not found in ./src"

			if [[ "$1" == "-d" || "$1" == "--delete" ]]; then
				if [[ "$#" == "1" || "$CURR_KEY" == "$2" ]]; then
					DEL_REGEX="/$2/d"
					sed -i "$DEL_REGEX" ./package.json
				fi
			fi
		fi

		fi
	fi
done < package.json
